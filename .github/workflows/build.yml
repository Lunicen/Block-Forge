name: Build

on:
  pull_request:
    branches: [develop]

jobs:
  build:
    name: Windows build
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86, x64]

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-dep
        uses: actions/cache@v3
        with:
          path: lib
          key: win-setup-${{ matrix.platform }}

      - name: Install msbuild
        if: steps.cache-dep.outputs.cache-hit != 'true'
        uses: microsoft/setup-msbuild@v1.1

      - name: Install cmake
        if: steps.cache-dep.outputs.cache-hit != 'true'
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Setup dependencies
        if: steps.cache-dep.outputs.cache-hit != 'true'
        run: setup.bat
        shell: cmd

      - name: Build and test the project
        run: |
          cmake -S . -B build -A ${{ matrix.platform == 'x86' && 'Win32' || 'x64' }}
          cmake --build build --config Release --parallel 4
          copy data\Release build\Release
          copy Settings.json build\Release
          pushd build\Release
          start /B BlockForge.exe
          timeout /T 5
          tasklist /FI "IMAGENAME eq BlockForge.exe" 2>NUL | find /I /N "BlockForge.exe" >NUL
          if "%ERRORLEVEL%"=="0" (
            echo "Program is still running, success!"
            exit 0
          ) else (
            echo "Program fails to start!"
            exit 1
          )
