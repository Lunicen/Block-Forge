name: SonarCloud Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: SonarCloud Build
    runs-on: windows-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Checkout current branch
        uses: actions/checkout@v3
    
      - name: Cache dependencies
        id: cache-dep
        uses: actions/cache@v3
        with:
          path: lib
          key: sonarcloud
        
      - name: Install cmake
        if: steps.cache-dep.outputs.cache-hit != 'true'
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Install dependencies
        if: steps.cache-dep.outputs.cache-hit != 'true'
        run: git submodule update --init --recursive
        
      - name: Set MSVC environment
        uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          arch: x64
          
      - name: Build libraries
        shell: cmd
        run: |
          cd scripts
          call "win_x86.bat"
          cd ..
        
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
        
      - name: Run build-wrapper
        run: |
          New-Item -ItemType directory -Path build
          cmake -S . -B build
          build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Release --parallel 4
          
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
