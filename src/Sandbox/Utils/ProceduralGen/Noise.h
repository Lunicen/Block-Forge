#pragma once
#define FASTNOISE_STATIC_LIB 1

#include <FastNoise/FastNoise.h>

#include "Core/Log.h"

/// @class Noise
/// @brief Represents the base class for the classes dedicated to generate noise algorithm.
class Noise
{
protected:
	Log& _log = Log::Get();

	const int _seed;
	const float _frequency;
	FastNoise::SmartNode<> _noiseGenerator;

	/// @brief The constructor.
	///	@param encodedTree - A string with encoded tree generated by using FastNoise2 tool.
	///	@param seed - noise seed for different results.
	///	@param frequency - The frequency of the encoded noise function.
	Noise(const std::string& encodedTree, const int seed, const float frequency)
		: _seed(seed), _frequency(frequency)
	{
		_noiseGenerator = FastNoise::NewFromEncodedNodeTree(encodedTree.c_str());
	}
};

